import '../models/usuario.dart';
import '../models/pessoa.dart';
import '../utils/io_helpers.dart';
import '../services/usuario_service.dart';

void mostrarMenuUsuario(UsuarioService service) {
  while (true) {
    print('\n==== MENU DE USU√ÅRIOS ====');
    print('1. Adicionar Usu√°rio');
    print('2. Listar Usu√°rios');
    print('3. Editar Usu√°rio');
    print('4. Remover Usu√°rio');
    print('5. Voltar');

    int opcao = lerInt("Digite o n√∫mero da op√ß√£o: ");

    switch (opcao) {
      case 1:
        // listarPessoas(pessoas); // TO-DO: Integrar com o cadastro de pessoas
        String nome = lerString("Nome do usu√°rio:");
        String email = lerString("Email:");
        String senha = lerString("Senha:");
        DateTime dataCriacao = DateTime.now();
        bool ativo = true;
        service.adicionar(
          Usuario(
            pessoa: Pessoa(nome: nome, email: email),
            senha: senha,
            dataCriacao: dataCriacao,
            ativo: ativo,
          ),
        );
        print("‚úÖ Usu√°rio adicionado com sucesso!");
        break;
      case 2:
        service.listar();
        break;

      case 3:
        service.listar();
        int index = lerInt("N√∫mero do usu√°rio a editar:");
        if (index < 1 || index > service.usuarios.length) {
          print("‚ùå √çndice inv√°lido.");
          break;
        }

        print("1. Editar Nome");
        print("2. Editar Email");
        int opcaoEdit = lerInt("Op√ß√£o:");
        switch (opcaoEdit) {
          case 1:
            String novoNome = lerString("Novo nome:");
            service.editarNome(index - 1, novoNome);
            break;
          case 2:
            String novoEmail = lerString("Novo email:");
            service.editarEmail(index - 1, novoEmail);
            break;
          default:
            print("‚ùå Op√ß√£o inv√°lida.");
        }
        break;

      case 4:
        service.listar();
        int indexRemover = lerInt("N√∫mero do usu√°rio a remover:");
        if (indexRemover < 1 || indexRemover > service.usuarios.length) {
          print("‚ùå √çndice inv√°lido.");
          break;
        }
        service.remover(indexRemover - 1);
        print("üóëÔ∏è Usu√°rio removido.");
        break;

      case 5:
        return;

      default:
        print("‚ùå Op√ß√£o inv√°lida.");
    }
  }
}

// Retorna todas as pessoas registradas
void listarPessoas(List<Pessoa> pessoas) {
  if (pessoas.isEmpty) {
    print("N√£o h√° pessoas cadastradas.");
  } else {
    for (var i = 0; i < pessoas.length; i++) {
      print(pessoas[i].toStringCustomizado());
    }
  }
}